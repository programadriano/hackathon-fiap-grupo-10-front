# Nome do Workflow
name: Hackathon Pipeline

# Evento que irá acionar a pipeline
on: 
  push:
    branches:
      - develop

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v3       # https://github.com/actions/checkout
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2  # https://github.com/actions/setup-node
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        run: npm install

      - name: Build Frontend
        run: npm run build
      
      # - name: Start front 
      #   run: cd frontend
      #       npm run build

      # # se for rodar teste
      # - name: Test Frontend
      #   run: cd frontend 
      #     npm test

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master  #https://github.com/marketplace/actions/sonarcloud-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  

      - name: Docker Login
        run:
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'

      - name: Build & Push Image
        run: 
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest

#   Deploy-Homolog:
#     needs: Build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v3 # https://github.com/actions/checkout

#       - name: Auth GCP
#         uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
#         with:
#           credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

#       - name: Cloud Run Deploy - Homolog
#         id: homolog-deploy
#         uses: 'google-github-actions/deploy-cloudrun@v1'  # https://github.com/marketplace/actions/deploy-to-cloud-run
#         with:
#           service: ${{ vars.GOOGLE_MYAPP }}-homolog
#           image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
#           flags: '--allow-unauthenticated'

#       - name: Test Homolog
#         run: 'curl "${{ steps.homolog-deploy.outputs.url }}"'

#   Deploy-Production:
#     needs: Deploy-Homolog
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v3 # https://github.com/actions/checkout

#       - name: Auth GCP
#         uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
#         with:
#           credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

#       - name: Cloud Run Deploy - Production
#         id: prod-deploy
#         uses: 'google-github-actions/deploy-cloudrun@v1'  # https://github.com/marketplace/actions/deploy-to-cloud-run
#         with:
#           service: ${{ vars.GOOGLE_MYAPP }}-prod
#           image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
#           flags: '--allow-unauthenticated'

#       - name: Test Prod
#         run: 'curl "${{ steps.prod-deploy.outputs.url }}"'